{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\src\\\\components\\\\layout\\\\sidenav-content.jsx\";\nimport React, { useState } from 'react';\nimport Switch from 'react-switch';\nimport useGlobalState from '../services/configContext';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // TODO: Figure out how to make global changes with changed state\n\nconst SideNavContent = () => {\n  const [unit, changeUnit] = useGlobalState();\n\n  const unitToBool = unit => {\n    return unit === 'C' ? true : false;\n  };\n\n  const boolToUnit = bool => {\n    return bool ? 'C' : 'F';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Options\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Unit\"), /*#__PURE__*/React.createElement(Switch, {\n    className: \"sideNavSwitch\",\n    onChange: checked => boolToUnit(checked),\n    checked: unitToBool(unit),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SideNavContent;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/src/components/layout/sidenav-content.jsx"],"names":["React","useState","Switch","useGlobalState","FontAwesomeIcon","SideNavContent","unit","changeUnit","unitToBool","boolToUnit","bool","width","checked","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAAQC,eAAR,QAA8B,gCAA9B,C,CAEA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBJ,cAAc,EAAzC;;AAEA,QAAMK,UAAU,GAAIF,IAAD,IAAU;AAC3B,WAAOA,IAAI,KAAK,GAAT,GAAe,IAAf,GAAsB,KAA7B;AACD,GAFD;;AAIA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AAC3B,WAAOA,IAAI,GAAG,GAAH,GAAS,GAApB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,QAAQ,EAAGC,OAAD,IAAaH,UAAU,CAACG,OAAD,CAFnC;AAGE,IAAA,OAAO,EAAEJ,UAAU,CAACF,IAAD,CAHrB;AAKE,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAC;AAAP,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CADF;AAkBD,CA7BD;;AA+BA,eAAeR,cAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Switch from 'react-switch';\r\nimport useGlobalState from '../services/configContext'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n// TODO: Figure out how to make global changes with changed state\r\n\r\nconst SideNavContent = () => {\r\n  const [unit, changeUnit] = useGlobalState();\r\n\r\n  const unitToBool = (unit) => {\r\n    return unit === 'C' ? true : false;\r\n  }\r\n\r\n  const boolToUnit = (bool) => {\r\n    return bool ? 'C' : 'F';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label style={{width: '100%'}}>\r\n        <span>Options</span>\r\n      </label>\r\n      <div className=\"divider\" />\r\n      <label style={{width: '100%'}}>\r\n        <span>Unit</span>\r\n        <Switch \r\n          className=\"sideNavSwitch\"\r\n          onChange={(checked) => boolToUnit(checked)}\r\n          checked={unitToBool(unit)}\r\n          \r\n          style={{float:'right'}}> \r\n        </Switch>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavContent;"]},"metadata":{},"sourceType":"module"}