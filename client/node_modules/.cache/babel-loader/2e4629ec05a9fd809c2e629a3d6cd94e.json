{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable jsx-a11y/anchor-is-valid */import React,{useState}from'react';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import CitySearcher from'./city-searcher';import WeatherCard from'./weather-card';var Card=function Card(_ref){var onChange=_ref.onChange,index=_ref.index,initData=_ref.initData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isActive=_useState2[0],setActive=_useState2[1];var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var payload;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return data;case 2:_context.t0=_context.sent;_context.t1=index;payload={data:_context.t0,index:_context.t1};onChange(payload);setActive(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();return isActive?/*#__PURE__*/React.createElement(CitySearcher,{onSubmit:function onSubmit(data){return _onSubmit(data);},onBlur:function onBlur(){return setActive(false);}}):!!initData?/*#__PURE__*/React.createElement(WeatherCard,{index:index,data:initData,onDelete:function onDelete(index){return onChange({index:index});},onEdit:function onEdit(){return setActive(true);}}):/*#__PURE__*/React.createElement(\"a\",{className:\"card hover-card addButton\",onClick:function onClick(){return setActive(true);}},/*#__PURE__*/React.createElement(\"span\",{id:\"add-text\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{paddingTop:'60%',width:'100%',display:'inline-block'},icon:['fas','plus-circle'],size:\"2x\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Add City\")));};export default Card;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/card.jsx"],"names":["React","useState","FontAwesomeIcon","CitySearcher","WeatherCard","Card","onChange","index","initData","isActive","setActive","onSubmit","data","payload","paddingTop","width","display"],"mappings":"2iBAAA,6CACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,eAAR,KAA8B,gCAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAmC,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,eAChBP,QAAQ,CAAC,KAAD,CADQ,wCACvCQ,QADuC,eAC7BC,SAD6B,eAG9C,GAAMC,CAAAA,SAAQ,2FAAG,iBAAOC,IAAP,oJACcA,CAAAA,IADd,8CAC2BL,KAD3B,CACTM,OADS,EACED,IADF,aACoBL,KADpB,cAEfD,QAAQ,CAACO,OAAD,CAAR,CACAH,SAAS,CAAC,KAAD,CAAT,CAHe,sDAAH,kBAARC,CAAAA,QAAQ,6CAAd,CAMA,MACEF,CAAAA,QAAQ,cACN,oBAAC,YAAD,EAAc,QAAQ,CAAE,kBAACG,IAAD,QAAUD,CAAAA,SAAQ,CAACC,IAAD,CAAlB,EAAxB,CAAkD,MAAM,CAAE,wBAAMF,CAAAA,SAAS,CAAC,KAAD,CAAf,EAA1D,EADM,CAEN,CAAC,CAACF,QAAF,cACA,oBAAC,WAAD,EAAa,KAAK,CAAED,KAApB,CAA2B,IAAI,CAAEC,QAAjC,CAA2C,QAAQ,CAAE,kBAACD,KAAD,QAAWD,CAAAA,QAAQ,CAAC,CAACC,KAAK,CAAEA,KAAR,CAAD,CAAnB,EAArD,CAA0F,MAAM,CAAE,wBAAMG,CAAAA,SAAS,CAAC,IAAD,CAAf,EAAlG,EADA,cAGA,yBAAG,SAAS,CAAC,2BAAb,CAAyC,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAAC,IAAD,CAAf,EAAlD,eACE,4BAAM,EAAE,CAAC,UAAT,eACE,oBAAC,eAAD,EAAiB,KAAK,CAAE,CAACI,UAAU,CAAC,KAAZ,CAAmBC,KAAK,CAAE,MAA1B,CAAkCC,OAAO,CAAE,cAA3C,CAAxB,CAAoF,IAAI,CAAE,CAAC,KAAD,CAAQ,aAAR,CAA1F,CAAkH,IAAI,CAAC,IAAvH,EADF,cAEE,wCAFF,CADF,CANJ,CAaD,CAtBD,CAwBA,cAAeX,CAAAA,IAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport CitySearcher from './city-searcher';\r\nimport WeatherCard from './weather-card';\r\n\r\nconst Card = ({ onChange, index, initData }) => {\r\n  const [isActive, setActive] = useState(false);\r\n\r\n  const onSubmit = async (data) => {\r\n    const payload = {data: await data, index: index};\r\n    onChange(payload);\r\n    setActive(false);\r\n  }\r\n\r\n  return (\r\n    isActive ? \r\n      <CitySearcher onSubmit={(data) => onSubmit(data)} onBlur={() => setActive(false)} />\r\n    : !!initData ?\r\n      <WeatherCard index={index} data={initData} onDelete={(index) => onChange({index: index})} onEdit={() => setActive(true)}/>\r\n    :\r\n      <a className=\"card hover-card addButton\" onClick={() => setActive(true)}>\r\n        <span id=\"add-text\">\r\n          <FontAwesomeIcon style={{paddingTop:'60%', width: '100%', display: 'inline-block'}} icon={['fas', 'plus-circle']} size=\"2x\"/>\r\n          <p>Add City</p>\r\n        </span>\r\n      </a>\r\n  );\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}