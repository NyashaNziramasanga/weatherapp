{"ast":null,"code":"const fetch = require('node-fetch');\n\nconst Services = {\n  prepareBody(data) {\n    return JSON.stringify(data);\n  },\n\n  prepareUrl(path) {\n    return 'http://localhost:1337' + path;\n  },\n\n  async post(url, body) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: body,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return await response.text();\n  },\n\n  async getWeather(data) {\n    const path = '/open-weather';\n    const url = this.prepareUrl(path);\n    const body = this.prepareBody(data);\n    console.log(await this.post(url, body));\n    return JSON.parse(await this.post(url, body));\n  }\n\n};\nmodule.exports = Services;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/services/services.js"],"names":["fetch","require","Services","prepareBody","data","JSON","stringify","prepareUrl","path","post","url","body","response","method","headers","text","getWeather","console","log","parse","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,WAAOC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAP;AACD,GAHc;;AAKfG,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAO,0BAA0BA,IAAjC;AACD,GAPc;;AASf,QAAMC,IAAN,CAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AACpB,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACU,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCF,MAAAA,IAAI,EAAEA,IAF0B;AAGhCG,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHuB,KAAN,CAA5B;AAMA,WAAO,MAAMF,QAAQ,CAACG,IAAT,EAAb;AACD,GAjBc;;AAmBf,QAAMC,UAAN,CAAiBZ,IAAjB,EAAuB;AACrB,UAAMI,IAAI,GAAG,eAAb;AACA,UAAME,GAAG,GAAG,KAAKH,UAAL,CAAgBC,IAAhB,CAAZ;AACA,UAAMG,IAAI,GAAG,KAAKR,WAAL,CAAiBC,IAAjB,CAAb;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAM,KAAKT,IAAL,CAAUC,GAAV,EAAeC,IAAf,CAAlB;AACA,WAAON,IAAI,CAACc,KAAL,CAAW,MAAM,KAAKV,IAAL,CAAUC,GAAV,EAAeC,IAAf,CAAjB,CAAP;AACD;;AA1Bc,CAAjB;AA6BAS,MAAM,CAACC,OAAP,GAAiBnB,QAAjB","sourcesContent":["const fetch = require('node-fetch');\r\n\r\nconst Services = {\r\n  prepareBody(data) {\r\n    return JSON.stringify(data);\r\n  },\r\n\r\n  prepareUrl(path) {\r\n    return 'http://localhost:1337' + path;\r\n  },\r\n\r\n  async post(url, body) {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      body: body,\r\n      headers: {'Content-Type': 'application/json'},\r\n    });\r\n  \r\n    return await response.text();\r\n  },\r\n\r\n  async getWeather(data) {\r\n    const path = '/open-weather';\r\n    const url = this.prepareUrl(path);\r\n    const body = this.prepareBody(data);\r\n\r\n    console.log(await this.post(url, body));\r\n    return JSON.parse(await this.post(url, body));\r\n  },\r\n}\r\n\r\nmodule.exports = Services;"]},"metadata":{},"sourceType":"module"}