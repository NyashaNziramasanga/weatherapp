{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState } from 'react';\nimport WeatherCard from './card/weather-card';\nimport CardAdder from './card/card-adder';\nimport { observer } from 'mobx-react-lite';\nconst CardRow = observer(() => {\n  const [cardList, changeCardList] = useState([]);\n  const savedLocs = JSON.parse(window.localStorage.getItem('saved-locs'));\n\n  const cachedWeather = async savedLocs => {\n    let list = [];\n\n    for (const loc of savedLocs) {\n      return savedLocs.slice(60).map(function (loc, index) {\n        return /*#__PURE__*/React.createElement(WeatherCard, {\n          params: (loc, index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }\n        });\n      });\n    }\n  };\n\n  if (!!savedLocs && savedLocs.length > 0) {\n    changeCardList(cachedWeather(savedLocs));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\" // onMouseDown={handleMouseDown}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, !!savedLocs && savedLocs.length > 0 && cachedWeather(), /*#__PURE__*/React.createElement(WeatherCard, {\n    loc: \"Melbourne, AU\",\n    index: 0,\n    data: {\n      icon: '03n',\n      desc: 'scattered clouds',\n      current: 300.15,\n      min: 301.15,\n      max: 340.15,\n      sunrise: 1485720272,\n      sunset: 1485766550\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), !(savedLocs.length >= 60) && /*#__PURE__*/React.createElement(CardAdder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }));\n});\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","WeatherCard","CardAdder","observer","CardRow","cardList","changeCardList","savedLocs","JSON","parse","window","localStorage","getItem","cachedWeather","list","loc","slice","map","index","length","icon","desc","current","min","max","sunrise","sunset"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,MAAMC,OAAO,GAAGD,QAAQ,CAAC,MAAM;AAC7B,QAAM,CAACE,QAAD,EAAWC,cAAX,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AAEA,QAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAX,CAAlB;;AAEA,QAAMC,aAAa,GAAG,MAAON,SAAP,IAAqB;AACzC,QAAIO,IAAI,GAAG,EAAX;;AACA,SAAK,MAAMC,GAAX,IAAkBR,SAAlB,EAA6B;AAC3B,aAAOA,SAAS,CAACS,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,UAASF,GAAT,EAAcG,KAAd,EAAoB;AACnD,4BAAO,oBAAC,WAAD;AAAa,UAAA,MAAM,GAAEH,GAAG,EAAEG,KAAP,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFQ,CAAP;AAGH;AAAC,GANF;;AAQA,MAAI,CAAC,CAACX,SAAF,IAAeA,SAAS,CAACY,MAAV,GAAmB,CAAtC,EAAyC;AACvCb,IAAAA,cAAc,CAACO,aAAa,CAACN,SAAD,CAAd,CAAd;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EAAC,eADZ,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAAC,CAACA,SAAF,IAAeA,SAAS,CAACY,MAAV,GAAmB,CAAlC,IACCN,aAAa,EALjB,eAOE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAE,eADP;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,IAAI,EAAE;AACJO,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,kBAFF;AAGJC,MAAAA,OAAO,EAAE,MAHL;AAIJC,MAAAA,GAAG,EAAE,MAJD;AAKJC,MAAAA,GAAG,EAAE,MALD;AAMJC,MAAAA,OAAO,EAAE,UANL;AAOJC,MAAAA,MAAM,EAAE;AAPJ,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAoBG,EAAEnB,SAAS,CAACY,MAAV,IAAoB,EAAtB,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADF;AA0BD,CA3CuB,CAAxB;AA6CA,eAAef,OAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport WeatherCard from './card/weather-card';\r\nimport CardAdder from './card/card-adder';\r\nimport {observer} from 'mobx-react-lite';\r\n\r\nconst CardRow = observer(() => {\r\n  const [cardList, changeCardList] = useState([]);\r\n\r\n  const savedLocs = JSON.parse(window.localStorage.getItem('saved-locs'));\r\n  \r\n  const cachedWeather = async (savedLocs) => {\r\n    let list = [];\r\n    for (const loc of savedLocs) {\r\n      return savedLocs.slice(60).map(function(loc, index){\r\n      return <WeatherCard params={loc, index} />\r\n    });\r\n  }};\r\n\r\n  if (!!savedLocs && savedLocs.length > 0) {\r\n    changeCardList(cachedWeather(savedLocs));\r\n  } \r\n  \r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n      // onMouseDown={handleMouseDown}\r\n    >\r\n      {!!savedLocs && savedLocs.length > 0 && \r\n        cachedWeather()\r\n      }\r\n      <WeatherCard \r\n        loc={\"Melbourne, AU\"}\r\n        index={0}\r\n        data={{\r\n          icon: '03n',\r\n          desc: 'scattered clouds',\r\n          current: 300.15,\r\n          min: 301.15,\r\n          max: 340.15,\r\n          sunrise: 1485720272,\r\n          sunset: 1485766550\r\n        }}\r\n      />\r\n      {!(savedLocs.length >= 60) &&\r\n        <CardAdder />\r\n      }\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}