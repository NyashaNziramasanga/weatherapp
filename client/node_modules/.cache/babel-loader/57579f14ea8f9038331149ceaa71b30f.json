{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card\\\\card-adder.jsx\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\nimport Textarea from \"react-textarea-autosize\";\n\nconst CardAdder = () => {\n  const [isActive, setActive] = useState(true);\n  const [location, setLocation] = useState('');\n  const [value, setValue] = useState('');\n  const cities = [{\n    name: 'Melbourne',\n    state: '',\n    country: 'AU',\n    id: 2158177\n  }, {\n    name: 'Melbourne',\n    state: 'FL',\n    country: 'US',\n    id: 4163971\n  }, {\n    name: 'Sydney',\n    state: '',\n    country: 'AU',\n    id: 2147714\n  }, {\n    name: 'Toronto',\n    state: '',\n    country: 'CA',\n    id: 6167865\n  }];\n\n  const handleBlur = () => {\n    setActive(false);\n  };\n\n  const handleChange = e => {\n    console.log('change');\n    console.log(e);\n    setValue(e.target.value);\n  };\n\n  const handleSelect = item => {\n    setLocation(item.id);\n    setValue(createLabel(item));\n  };\n\n  function createLabel({\n    name,\n    state,\n    country\n  }) {\n    const bracket = state === '' ? '' : ` (${state})`;\n    return `${name}${bracket}, ${country}`;\n  }\n\n  return isActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card weather-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: cities,\n    getOptionLabel: option => createLabel(option),\n    autoHighlight: true,\n    style: {\n      width: '100%'\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      autoFocus: true,\n      onBlur: handleBlur,\n      style: {\n        width: '90%',\n        paddingTop: '1rem'\n      },\n      placeholder: \" Enter city name...\",\n      onChange: event => setValue(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })),\n    onChange: (event, value) => handleSelect(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"a\", {\n    className: \"card hover-card addButton\",\n    onClick: () => setActive(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: ['fas', 'plus-circle'],\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Add City\")));\n};\n\nexport default CardAdder;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/card-adder.jsx"],"names":["React","useState","FontAwesomeIcon","Autocomplete","TextField","Textarea","CardAdder","isActive","setActive","location","setLocation","value","setValue","cities","name","state","country","id","handleBlur","handleChange","e","console","log","target","handleSelect","item","createLabel","bracket","option","width","params","paddingTop","event"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { TextField } from '@material-ui/core'\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst CardAdder = () => {\r\n  const [isActive, setActive] = useState(true);\r\n  const [location, setLocation] = useState('');\r\n  const [value, setValue] = useState('');\r\n\r\n  const cities=[\r\n    { name: 'Melbourne',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2158177,\r\n    },\r\n    { \r\n      name: 'Melbourne',\r\n      state: 'FL',\r\n      country: 'US',\r\n      id: 4163971\r\n    },\r\n    {\r\n      name: 'Sydney',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2147714,\r\n    },\r\n    {\r\n      name: 'Toronto',\r\n      state: '',\r\n      country: 'CA',\r\n      id: 6167865,\r\n    },\r\n  ]\r\n\r\n  const handleBlur = () => {\r\n    setActive(false);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    console.log('change');\r\n    console.log(e);\r\n    setValue(e.target.value);\r\n  }\r\n\r\n  const handleSelect = (item) => {\r\n    setLocation(item.id);\r\n    setValue(createLabel(item));\r\n  }\r\n\r\n  function createLabel({name, state, country}) {\r\n    const bracket = state === '' ? '' : ` (${state})`;\r\n    return `${name}${bracket}, ${country}`;\r\n  }\r\n\r\n  return (\r\n    isActive ? \r\n      <div className=\"card weather-card\">\r\n        <Autocomplete\r\n          options={cities}\r\n          getOptionLabel={(option) => createLabel(option)}\r\n          autoHighlight\r\n          style={{ width: '100%' }}\r\n          renderInput={(params) => \r\n            <TextField \r\n              {...params}\r\n              autoFocus={true}\r\n              onBlur={handleBlur}\r\n              style={ { width: '90%', paddingTop: '1rem'}}\r\n              placeholder=\" Enter city name...\"\r\n              onChange={(event) => setValue(event.target.value)}\r\n            />\r\n          }\r\n          onChange={(event, value) => handleSelect(value)}\r\n        />\r\n      </div>\r\n    :\r\n      <a className=\"card hover-card addButton\" onClick={()=> setActive(true)}>\r\n        <span id=\"add-text\">\r\n          <FontAwesomeIcon icon={['fas', 'plus-circle']} size=\"2x\"/>\r\n          <p>Add City</p>\r\n        </span>\r\n      </a>\r\n  );\r\n}\r\n\r\nexport default CardAdder;"]},"metadata":{},"sourceType":"module"}