{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst CardRow = () => {\n  const [idList, changeIdList] = useState(() => {\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    // console.log(savedList);\n    // const savedWeather = async (savedList) => {\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\n    //   return dataList;\n    // };\n    // return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\n    return [];\n  });\n  useEffect(() => {\n    console.log(idList);\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map(data => data.id)));\n  });\n\n  const onDelete = index => {\n    changeIdList(idList.splice(index, 1));\n  };\n\n  const onAdd = (data, index) => {\n    changeIdList(index < idList.length ? idList.splice(index, 1, data) : idList.concat([data]));\n  };\n\n  const data1 = {\n    country: \"AU\",\n    current: 278.39,\n    desc: \"scattered clouds\",\n    humidity: 81,\n    icon: \"03n\",\n    id: 2158177,\n    max: 280.15,\n    min: 276.48,\n    name: \"Melbourne\",\n    pressure: 1020,\n    vision: 10000,\n    winddeg: 360,\n    windspeed: 3.6\n  };\n  const data2 = {\n    country: \"US\",\n    current: 304.48,\n    desc: \"few clouds\",\n    humidity: 66,\n    icon: \"02d\",\n    id: 4163971,\n    max: 304.82,\n    min: 303.71,\n    name: \"Melbourne\",\n    pressure: 1020,\n    vision: 10000,\n    winddeg: 80,\n    windspeed: 5.1\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    onDelete: index => onDelete(index),\n    onAdd: (data, index) => onAdd(data, index),\n    data: data1,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    onDelete: index => onDelete(index),\n    onAdd: (data, index) => onAdd(data, index),\n    data: data2,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","Card","Services","CardRow","idList","changeIdList","console","log","window","localStorage","setItem","JSON","stringify","map","data","id","onDelete","index","splice","onAdd","length","concat","data1","country","current","desc","humidity","icon","max","min","name","pressure","vision","winddeg","windspeed","data2"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useState(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // console.log(savedList);\r\n\r\n    // const savedWeather = async (savedList) => {\r\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n    //   return dataList;\r\n    // };\r\n\r\n    // return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(idList);\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  });\r\n\r\n  const onDelete = (index) => {\r\n    changeIdList(idList.splice(index, 1));\r\n  }\r\n\r\n  const onAdd = (data, index) => {\r\n    changeIdList( index < idList.length ? idList.splice(index, 1, data) : idList.concat([data]));\r\n  };\r\n\r\n  const data1={\r\n    country: \"AU\",\r\n    current: 278.39,\r\n    desc: \"scattered clouds\",\r\n    humidity: 81,\r\n    icon: \"03n\",\r\n    id: 2158177,\r\n    max: 280.15,\r\n    min: 276.48,\r\n    name: \"Melbourne\",\r\n    pressure: 1020,\r\n    vision: 10000,\r\n    winddeg: 360,\r\n    windspeed: 3.6,\r\n    };\r\n\r\n  const data2={\r\n    country: \"US\",\r\n    current: 304.48,\r\n    desc: \"few clouds\",\r\n    humidity: 66,\r\n    icon: \"02d\",\r\n    id: 4163971,\r\n    max: 304.82,\r\n    min: 303.71,\r\n    name: \"Melbourne\",\r\n    pressure: 1020,\r\n    vision: 10000,\r\n    winddeg: 80,\r\n    windspeed: 5.1,\r\n  };\r\n  \r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} data={data1} index={0}/>\r\n      <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} data={data2} index={1}/>\r\n      {/* {idList.length > 0 && \r\n        idList.map((data, index) => {\r\n        return <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} data={data} index={index}/>\r\n        })\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onAdd={(data, index) => onAdd(data, index)} index={idList.length}/>\r\n      } */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}