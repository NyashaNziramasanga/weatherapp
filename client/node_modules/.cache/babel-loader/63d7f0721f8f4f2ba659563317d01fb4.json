{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card\\\\card-adder.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField, CircularProgress } from '@material-ui/core';\n\nconst CardAdder = () => {\n  const [isActive, setActive] = useState(true);\n  const [location, setLocation] = useState(0);\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(location);\n    if (!location) return;\n    setLoading(true);\n    console.log(loading);\n\n    (async location => {\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=50');\n      const data = await response.json();\n      await setTimeout(console.log(data), 5000);\n    })();\n\n    setLoading(false);\n  });\n  const cities = [{\n    name: 'Melbourne',\n    state: '',\n    country: 'AU',\n    id: 2158177\n  }, {\n    name: 'Melbourne',\n    state: 'FL',\n    country: 'US',\n    id: 4163971\n  }, {\n    name: 'Sydney',\n    state: '',\n    country: 'AU',\n    id: 2147714\n  }, {\n    name: 'Toronto',\n    state: '',\n    country: 'CA',\n    id: 6167865\n  }]; // const handleSelect = async(item) => {\n  //   console.log(item.id);\n  //   console.log(location);\n  //   setLocation(location + item.id);\n  //   console.log(location);\n  //   setValue(createLabel(item));\n  // }\n\n  function createLabel({\n    name,\n    state,\n    country\n  }) {\n    const bracket = state === '' ? '' : ` (${state})`;\n    return `${name}${bracket}, ${country}`;\n  }\n\n  return isActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card weather-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    options: cities,\n    getOptionLabel: option => createLabel(option),\n    autoHighlight: true,\n    style: {\n      width: '100%'\n    },\n    loading: loading,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      value: value,\n      autoFocus: true,\n      onBlur: () => setActive(false),\n      style: {\n        width: '90%',\n        paddingTop: '1rem'\n      },\n      placeholder: \"Enter city name...\",\n      onChange: event => setValue(event.target.value),\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }\n        }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 32\n          }\n        }) : null, params.InputProps.endAdornment)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    })),\n    onChange: (e, value) => setLocation(value.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"a\", {\n    className: \"card hover-card addButton\",\n    onClick: () => setActive(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: ['fas', 'plus-circle'],\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Add City\")));\n};\n\nexport default CardAdder;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/card-adder.jsx"],"names":["React","useState","useEffect","FontAwesomeIcon","Autocomplete","TextField","CircularProgress","CardAdder","isActive","setActive","location","setLocation","value","setValue","loading","setLoading","console","log","response","fetch","data","json","setTimeout","cities","name","state","country","id","createLabel","bracket","option","width","params","paddingTop","event","target","InputProps","endAdornment","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { TextField, CircularProgress } from '@material-ui/core'\r\n\r\nconst CardAdder = () => {\r\n  const [isActive, setActive] = useState(true);\r\n  const [location, setLocation] = useState(0);\r\n  const [value, setValue] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() =>  {\r\n    console.log(location);\r\n    if (!location) return; \r\n\r\n    setLoading(true);\r\n    console.log(loading);\r\n\r\n    (async (location) => {\r\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=50');\r\n      const data = await response.json();\r\n      await setTimeout(console.log(data), 5000);\r\n    })();\r\n\r\n    setLoading(false);\r\n  });\r\n\r\n  const cities=[\r\n    { name: 'Melbourne',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2158177,\r\n    },\r\n    { \r\n      name: 'Melbourne',\r\n      state: 'FL',\r\n      country: 'US',\r\n      id: 4163971\r\n    },\r\n    {\r\n      name: 'Sydney',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2147714,\r\n    },\r\n    {\r\n      name: 'Toronto',\r\n      state: '',\r\n      country: 'CA',\r\n      id: 6167865,\r\n    },\r\n  ]\r\n\r\n  // const handleSelect = async(item) => {\r\n  //   console.log(item.id);\r\n  //   console.log(location);\r\n  //   setLocation(location + item.id);\r\n  //   console.log(location);\r\n  //   setValue(createLabel(item));\r\n  // }\r\n\r\n  function createLabel({name, state, country}) {\r\n    const bracket = state === '' ? '' : ` (${state})`;\r\n    return `${name}${bracket}, ${country}`;\r\n  }\r\n\r\n  return (\r\n    isActive ? \r\n      <div className=\"card weather-card\">\r\n        <Autocomplete\r\n          options={cities}\r\n          getOptionLabel={(option) => createLabel(option)}\r\n          autoHighlight\r\n          style={{ width: '100%' }}\r\n          loading={loading}\r\n          renderInput={(params) => \r\n            <TextField \r\n              {...params}\r\n              value={value}\r\n              autoFocus={true}\r\n              onBlur={() => setActive(false)}\r\n              style={ { width: '90%', paddingTop: '1rem'}}\r\n              placeholder=\"Enter city name...\"\r\n              onChange={(event) => setValue(event.target.value)}\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                endAdornment: (\r\n                  <React.Fragment>\r\n                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                    {params.InputProps.endAdornment}\r\n                  </React.Fragment>\r\n                )\r\n              }}\r\n            />\r\n          }\r\n          onChange={(e, value) => setLocation(value.id)}\r\n        />\r\n      </div>\r\n    :\r\n      <a className=\"card hover-card addButton\" onClick={()=> setActive(true)}>\r\n        <span id=\"add-text\">\r\n          <FontAwesomeIcon icon={['fas', 'plus-circle']} size=\"2x\"/>\r\n          <p>Add City</p>\r\n        </span>\r\n      </a>\r\n  );\r\n}\r\n\r\nexport default CardAdder;"]},"metadata":{},"sourceType":"module"}