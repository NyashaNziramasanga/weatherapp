{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React,{useReducer,useEffect}from'react';import Card from'./card/card';import Services from'../../services/services';var reducer=function reducer(list,action){var type=action.type,data=action.data,index=action.index;switch(type){case'ADD_CARD':return index<list.length?[].concat(_toConsumableArray(list.slice(0,index)),[data],_toConsumableArray(list.slice(index+1))):list.concat([data]);case'REMOVE_CARD':return list.filter(function(_,i){return i!==index;});default:return list;}};var CardRow=function CardRow(){var _useReducer=useReducer(reducer,[]),_useReducer2=_slicedToArray(_useReducer,2),idList=_useReducer2[0],changeIdList=_useReducer2[1];useEffect(function(){// const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n// console.log('savedlist', savedList);\n// const savedWeather = async (savedList) => {\n//   const validIds = savedList.filter(id => typeof(id) == 'number');\n//   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\n//   return dataList;\n// };\n// changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\n},[]);useEffect(function(){window.localStorage.setItem('saved-ids',JSON.stringify(idList.map(function(data){return data.id;})));},[idList]);var handleChange=function handleChange(_ref){var data=_ref.data,index=_ref.index;changeIdList({type:!!data?'ADD_CARD':'REMOVE_CARD',data:data,index:index});};return/*#__PURE__*/React.createElement(\"div\",{className:\"card-row body\"},idList.length>0&&idList.map(function(data,index){return/*#__PURE__*/React.createElement(Card,{onChange:function onChange(payload){return handleChange(payload);},initData:data,index:index});}),idList.length<10&&/*#__PURE__*/React.createElement(Card,{onChange:function onChange(payload){return handleChange(payload);},index:idList.length}));};export default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useReducer","useEffect","Card","Services","reducer","list","action","type","data","index","length","slice","concat","filter","_","i","CardRow","idList","changeIdList","window","localStorage","setItem","JSON","stringify","map","id","handleChange","payload"],"mappings":"4XAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,SAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAOC,MAAP,CAAkB,IACzBC,CAAAA,IADyB,CACJD,MADI,CACzBC,IADyB,CACnBC,IADmB,CACJF,MADI,CACnBE,IADmB,CACbC,KADa,CACJH,MADI,CACbG,KADa,CAEhC,OAAQF,IAAR,EACE,IAAK,UAAL,CACE,MAAQE,CAAAA,KAAK,CAAGJ,IAAI,CAACK,MAAb,8BAA0BL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAaF,KAAb,CAA1B,GAA+CD,IAA/C,qBAAwDH,IAAI,CAACM,KAAL,CAAWF,KAAK,CAAC,CAAjB,CAAxD,GAA+EJ,IAAI,CAACO,MAAL,CAAY,CAACJ,IAAD,CAAZ,CAAvF,CACF,IAAK,aAAL,CACE,MAAOH,CAAAA,IAAI,CAACQ,MAAL,CAAY,SAACC,CAAD,CAAGC,CAAH,QAASA,CAAAA,CAAC,GAAKN,KAAf,EAAZ,CAAP,CACF,QACE,MAAOJ,CAAAA,IAAP,CANJ,CAQD,CAVD,CAYA,GAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,iBACWhB,UAAU,CAACI,OAAD,CAAU,EAAV,CADrB,4CACba,MADa,iBACLC,YADK,iBAGpBjB,SAAS,CAAC,UAAM,CACd;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACD,CAXQ,CAWN,EAXM,CAAT,CAaAA,SAAS,CAAC,UAAM,CACdkB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAyCC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,GAAP,CAAW,SAAChB,IAAD,QAAUA,CAAAA,IAAI,CAACiB,EAAf,EAAX,CAAf,CAAzC,EACD,CAFQ,CAEN,CAACR,MAAD,CAFM,CAAT,CAIA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAmB,IAAjBlB,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,KAAW,MAAXA,KAAW,CACtCS,YAAY,CAAC,CACXX,IAAI,CAAE,CAAC,CAACC,IAAF,CAAS,UAAT,CAAsB,aADjB,CAEXA,IAAI,CAAEA,IAFK,CAGXC,KAAK,CAAEA,KAHI,CAAD,CAAZ,CAKD,CAND,CAQA,mBACE,2BACE,SAAS,CAAC,eADZ,EAGGQ,MAAM,CAACP,MAAP,CAAgB,CAAhB,EACCO,MAAM,CAACO,GAAP,CAAW,SAAChB,IAAD,CAAOC,KAAP,qBAAiB,oBAAC,IAAD,EAAM,QAAQ,CAAE,kBAACkB,OAAD,QAAaD,CAAAA,YAAY,CAACC,OAAD,CAAzB,EAAhB,CAAoD,QAAQ,CAAEnB,IAA9D,CAAoE,KAAK,CAAEC,KAA3E,EAAjB,EAAX,CAJJ,CAOGQ,MAAM,CAACP,MAAP,CAAgB,EAAhB,eACC,oBAAC,IAAD,EAAM,QAAQ,CAAE,kBAACiB,OAAD,QAAaD,CAAAA,YAAY,CAACC,OAAD,CAAzB,EAAhB,CAAoD,KAAK,CAAEV,MAAM,CAACP,MAAlE,EARJ,CADF,CAaD,CAzCD,CA2CA,cAAeM,CAAAA,OAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst reducer = (list, action) => {\r\n  const {type, data, index} = action;\r\n  switch (type) {\r\n    case 'ADD_CARD':\r\n      return( index < list.length ? [...list.slice(0,index), data, ...list.slice(index+1)] : list.concat([data]));\r\n    case 'REMOVE_CARD':\r\n      return(list.filter((_,i) => i !== index));\r\n    default:\r\n      return list;\r\n  }\r\n}\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // console.log('savedlist', savedList);\r\n\r\n    // const savedWeather = async (savedList) => {\r\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n    //   return dataList;\r\n    // };\r\n\r\n    // changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  }, [idList]);\r\n\r\n  const handleChange = ({data, index}) => {\r\n    changeIdList({\r\n      type: !!data ? 'ADD_CARD' : 'REMOVE_CARD',\r\n      data: data,\r\n      index: index,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {idList.length > 0 && \r\n        idList.map((data, index) => <Card onChange={(payload) => handleChange(payload)} initData={data} index={index}/>\r\n        )\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onChange={(payload) => handleChange(payload)} index={idList.length}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}