{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst CardRow = () => {\n  const [idList, changeIdList] = useState(async () => {\n    const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    console.log('savedlist', savedList);\n\n    const savedWeather = async savedList => {\n      const validIds = savedList.filter(id => typeof id == 'number');\n      const dataList = await Promise.all(validIds.map(id => Services.getWeather({\n        locId: id\n      })));\n      return await dataList;\n    };\n\n    console.log('blah', await savedWeather(savedList));\n    return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\n  });\n  useEffect(() => {\n    console.log('effect', idList); //window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\n  });\n\n  const onDelete = index => {\n    changeIdList(idList.filter((_, i) => i !== index));\n  };\n\n  const onAdd = (data, index) => {\n    changeIdList(index < idList.length ? [...idList.slice(0, index), data, ...idList.slice(index + 1)] : idList.concat([data]));\n  };\n\n  console.log('outside', idList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, idList.length > 0 && idList.map((data, index) => /*#__PURE__*/React.createElement(Card, {\n    onDelete: index => onDelete(index),\n    onAdd: (data, index) => onAdd(data, index),\n    initData: data,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  })), idList.length < 10 && /*#__PURE__*/React.createElement(Card, {\n    onAdd: (data, index) => onAdd(data, index),\n    index: idList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","Card","Services","CardRow","idList","changeIdList","savedList","JSON","parse","window","localStorage","getItem","console","log","savedWeather","validIds","filter","id","dataList","Promise","all","map","getWeather","locId","length","onDelete","index","_","i","onAdd","data","slice","concat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useState(async () => {\r\n    const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    console.log('savedlist', savedList);\r\n\r\n    const savedWeather = async (savedList) => {\r\n      const validIds = savedList.filter(id => typeof(id) == 'number');\r\n      const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n      return await dataList;\r\n    };\r\n    console.log('blah', await savedWeather(savedList));\r\n\r\n    return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('effect', idList);\r\n    //window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  });\r\n\r\n  const onDelete = (index) => {\r\n    changeIdList(idList.filter((_,i) => i !== index));\r\n  };\r\n\r\n  const onAdd = (data, index) => {\r\n    changeIdList( index < idList.length ? [...idList.slice(0,index), data, ...idList.slice(index+1)] : idList.concat([data]));\r\n  };\r\n  \r\n  console.log('outside', idList);\r\n\r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {idList.length > 0 && \r\n        idList.map((data, index) => <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} initData={data} index={index}/>\r\n        )\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onAdd={(data, index) => onAdd(data, index)} index={idList.length}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}