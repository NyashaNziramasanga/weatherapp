{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card\\\\card.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CitySearcher from './city-searcher';\nimport WeatherCard from './weather-card';\nimport Services from '../../../services/services';\n\nconst Card = ({\n  loc = \"\",\n  index\n}) => {\n  const [isActive, setActive] = useState(false);\n  const [data, setData] = useState({\n    id: loc\n  });\n  useEffect(() => {\n    if (!isActive || data.id === \"\") return;\n\n    async function fetchData() {\n      setData(await Services.getWeather({\n        locId: loc\n      }));\n    }\n\n    ;\n    fetchData();\n    setActive(false);\n  }, [data]);\n  return isActive ? /*#__PURE__*/React.createElement(CitySearcher, {\n    data: loc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }) : data !== {} ? /*#__PURE__*/React.createElement(WeatherCard, {\n    index: index,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }) :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/anchor-is-valid\n  React.createElement(\"a\", {\n    className: \"card hover-card addButton\",\n    onClick: () => setActive(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    style: {\n      paddingTop: '60%',\n      width: '100%',\n      display: 'inline-block'\n    },\n    icon: ['fas', 'plus-circle'],\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Add City\")));\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/card.jsx"],"names":["React","useState","useEffect","FontAwesomeIcon","CitySearcher","WeatherCard","Services","Card","loc","index","isActive","setActive","data","setData","id","fetchData","getWeather","locId","paddingTop","width","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAG,GAAC,EAAL;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAChC,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAACa,IAAAA,EAAE,EAAEN;AAAL,GAAD,CAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,QAAD,IAAaE,IAAI,CAACE,EAAL,KAAU,EAA3B,EAA+B;;AAE/B,mBAAeC,SAAf,GAA2B;AACzBF,MAAAA,OAAO,CAAC,MAAMP,QAAQ,CAACU,UAAT,CAAoB;AAACC,QAAAA,KAAK,EAAET;AAAR,OAApB,CAAP,CAAP;AACD;;AAAA;AACDO,IAAAA,SAAS;AAETJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GATM,EASJ,CAACC,IAAD,CATI,CAAT;AAWA,SACEF,QAAQ,gBACN,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEF,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAENI,IAAI,KAAK,EAAT,gBACA,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEH,KAApB;AAA2B,IAAA,IAAI,EAAEG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAAA;AAGA;AACA;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAyC,IAAA,OAAO,EAAE,MAAKD,SAAS,CAAC,IAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAU,EAAC,KAAZ;AAAmBC,MAAAA,KAAK,EAAE,MAA1B;AAAkCC,MAAAA,OAAO,EAAE;AAA3C,KAAxB;AAAoF,IAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,aAAR,CAA1F;AAAkH,IAAA,IAAI,EAAC,IAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CAPJ;AAcD,CA7BD;;AA+BA,eAAeb,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport CitySearcher from './city-searcher';\r\nimport WeatherCard from './weather-card';\r\nimport Services from '../../../services/services';\r\n\r\nconst Card = ({loc=\"\", index}) => {\r\n  const [isActive, setActive] = useState(false);\r\n  const [data, setData] = useState({id: loc});\r\n\r\n  useEffect(() => {\r\n      if (!isActive || data.id===\"\") return;\r\n\r\n      async function fetchData() {\r\n        setData(await Services.getWeather({locId: loc}));\r\n      };\r\n      fetchData();\r\n\r\n      setActive(false);\r\n    }, [data])\r\n\r\n  return (\r\n    isActive ? \r\n      <CitySearcher data={loc}/>\r\n    : data !== {} ?\r\n      <WeatherCard index={index} data={data} />\r\n      :\r\n      // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n      <a className=\"card hover-card addButton\" onClick={()=> setActive(true)} >\r\n        <span id=\"add-text\">\r\n          <FontAwesomeIcon style={{paddingTop:'60%', width: '100%', display: 'inline-block'}} icon={['fas', 'plus-circle']} size=\"2x\"/>\r\n          <p>Add City</p>\r\n        </span>\r\n      </a>\r\n  );\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}