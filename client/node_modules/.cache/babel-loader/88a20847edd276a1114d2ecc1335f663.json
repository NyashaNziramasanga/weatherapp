{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst CardRow = () => {\n  const [idList, changeIdList] = useState([]);\n\n  const reducer = (list, action) => {\n    const {\n      type,\n      data,\n      index\n    } = action;\n    const tempList = [...idList];\n\n    switch (action.type) {\n      case 'ADD_CARD':\n        return index < tempList.length ? [...tempList.slice(0, index), data, ...tempList.slice(index + 1)] : tempList.concat([data]);\n\n      case 'REMOVE_CARD':\n        return tempList.filter((_, i) => i !== index);\n\n      default:\n        return tempList;\n    }\n  };\n\n  useEffect(() => {// const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    // console.log('savedlist', savedList);\n    // const savedWeather = async (savedList) => {\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\n    //   return dataList;\n    // };\n    // changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map(data => data.id)));\n  }, [idList]);\n\n  const onDelete = index => {\n    const tempList = [...idList];\n    changeIdList(tempList.filter((_, i) => i !== index));\n  };\n\n  const onAdd = (data, index) => {\n    const tempList = [...idList];\n    changeIdList(index < tempList.length ? [...tempList.slice(0, index), data, ...tempList.slice(index + 1)] : tempList.concat([data]));\n  };\n\n  console.log('outside', idList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, idList.length > 0 && idList.map((data, index) => /*#__PURE__*/React.createElement(Card, {\n    onDelete: index => onDelete(index),\n    onAdd: (data, index) => onAdd(data, index),\n    initData: data,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  })), idList.length < 10 && /*#__PURE__*/React.createElement(Card, {\n    onAdd: (data, index) => onAdd(data, index),\n    index: idList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","Card","Services","CardRow","idList","changeIdList","reducer","list","action","type","data","index","tempList","length","slice","concat","filter","_","i","window","localStorage","setItem","JSON","stringify","map","id","onDelete","onAdd","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useState([]);\r\n\r\n  const reducer = (list, action) => {\r\n    const {type, data, index} = action;\r\n    const tempList = [...idList];\r\n    switch (action.type) {\r\n      case 'ADD_CARD':\r\n        return( index < tempList.length ? [...tempList.slice(0,index), data, ...tempList.slice(index+1)] : tempList.concat([data]));\r\n      case 'REMOVE_CARD':\r\n        return(tempList.filter((_,i) => i !== index));\r\n      default:\r\n        return tempList;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // console.log('savedlist', savedList);\r\n\r\n    // const savedWeather = async (savedList) => {\r\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n    //   return dataList;\r\n    // };\r\n\r\n    // changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  }, [idList]);\r\n\r\n  const onDelete = (index) => {\r\n    const tempList = [...idList];\r\n    changeIdList(tempList.filter((_,i) => i !== index));\r\n  };\r\n\r\n  const onAdd = (data, index) => {\r\n    const tempList = [...idList];\r\n    changeIdList( index < tempList.length ? [...tempList.slice(0,index), data, ...tempList.slice(index+1)] : tempList.concat([data]));\r\n  };\r\n  \r\n  console.log('outside', idList);\r\n\r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {idList.length > 0 && \r\n        idList.map((data, index) => <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} initData={data} index={index}/>\r\n        )\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onAdd={(data, index) => onAdd(data, index)} index={idList.length}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}