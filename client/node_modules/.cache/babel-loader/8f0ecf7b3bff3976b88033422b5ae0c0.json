{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card\\\\weather-card.jsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport useGlobalState from './../../services/configContext.js';\nimport CitySearcher from './city-searcher';\nconst WeatherCard = observer(({\n  loc,\n  index,\n  data\n}) => {\n  const {\n    icon,\n    desc,\n    current,\n    min,\n    max,\n    sunrise,\n    sunset\n  } = data;\n  const city = loc.split(',')[0];\n  const [unit, changeUnit] = useGlobalState();\n  const styles = {\n    divider: {\n      margin: '8px 0',\n      height: 1,\n      backgroundColor: '#c0c0c066'\n    },\n    cardhead: {\n      fontSize: 'x-large'\n    }\n  };\n\n  const getImage = async () => {\n    const imgUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: imgUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const handleDelete = () => {};\n\n  const convertTemp = temp => {\n    let cel = temp - 273.15;\n    return Math.round(unit === 'C' ? cel : cel * 9 / 5 + 32);\n  };\n\n  const convertTime = time => {\n    const date = new Date(time * 1000);\n    let hours = date.getHours();\n    const meridiem = hours < 12 ? 'am' : 'pm';\n    if (hours > 12) hours -= 12;\n    const min = date.getMinutes();\n    return `${hours}:${min}${meridiem}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card weather-card\",\n    styles: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-head\",\n    styles: {\n      fontSize: 'x-large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, city), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: ['fas', 'times'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, convertTemp(current), \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, getImage, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, desc))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"min-max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Min\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, convertTemp(min))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Max\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, convertTemp(max)))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sunrise-sunset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Sunrise\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, convertTime(sunrise))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Sunset\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, convertTime(sunset))))));\n});\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/weather-card.jsx"],"names":["React","observer","FontAwesomeIcon","useGlobalState","CitySearcher","WeatherCard","loc","index","data","icon","desc","current","min","max","sunrise","sunset","city","split","unit","changeUnit","styles","divider","margin","height","backgroundColor","cardhead","fontSize","getImage","imgUrl","handleDelete","convertTemp","temp","cel","Math","round","convertTime","time","date","Date","hours","getHours","meridiem","getMinutes","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport useGlobalState from './../../services/configContext.js';\r\nimport CitySearcher from './city-searcher';\r\n\r\nconst WeatherCard = observer(({loc, index, data}) => {\r\n  const {icon, desc, current, min, max, sunrise, sunset} = data;\r\n  const city = loc.split(',')[0];\r\n  const [unit, changeUnit] = useGlobalState();\r\n  \r\n  const styles={\r\n    divider: {\r\n      margin: '8px 0',\r\n      height: 1,\r\n      backgroundColor: '#c0c0c066',\r\n    },\r\n    cardhead: {\r\n      fontSize: 'x-large',\r\n    },\r\n  }\r\n\r\n  const getImage = async() => {\r\n    const imgUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n    return (\r\n      <img src={imgUrl} alt=\"\" />\r\n    )\r\n  }\r\n\r\n  const handleDelete = () => {};\r\n\r\n  const convertTemp = (temp) => {\r\n    let cel = temp - 273.15;\r\n    return Math.round(unit === 'C' ? cel : cel*9/5 + 32);\r\n  };\r\n\r\n  const convertTime = (time) => {\r\n    const date = new Date(time * 1000);\r\n    let hours = date.getHours();\r\n    const meridiem = hours < 12 ? 'am' : 'pm';\r\n    if (hours > 12) hours -= 12;\r\n    const min = date.getMinutes();\r\n\r\n    return `${hours}:${min}${meridiem}`;\r\n  };\r\n\r\n  return (\r\n    <div className='card weather-card' styles={{color: 'black'}}>\r\n      <div className='card-head' styles={{fontSize: 'x-large'}}>\r\n        <span>{city}</span>\r\n        <a onClick={() => handleDelete()} >\r\n          <FontAwesomeIcon icon={['fas', 'times']}/>\r\n        </a>\r\n      </div>\r\n      <div className='card-body'>\r\n        <div className='main'>\r\n          <span>{convertTemp(current)}&#176;</span>\r\n          <div className='status'>\r\n            {getImage}\r\n            <span className='capitalize'>{desc}</span>\r\n          </div>\r\n        </div>\r\n        <div style={styles.divider}/>\r\n        <div className='min-max'>\r\n          <div className='min'>\r\n            <span>Min</span>\r\n            <span>{convertTemp(min)}</span>\r\n          </div>\r\n          <div className='max'>\r\n            <span>Max</span>\r\n            <span>{convertTemp(max)}</span>\r\n          </div>\r\n        </div>\r\n        <div style={styles.divider}/>\r\n        <div className='sunrise-sunset'>\r\n          <div className='rise'>\r\n            <span>Sunrise</span>\r\n            <span>{convertTime(sunrise)}</span>\r\n          </div>\r\n          <div className='set'>\r\n            <span>Sunset</span>\r\n            <span>{convertTime(sunset)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}