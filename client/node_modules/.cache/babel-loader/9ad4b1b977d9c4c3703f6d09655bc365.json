{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst CardRow = () => {\n  const getCardWithData = async (id, index) => {\n    const data = await Services.getData({\n      locId: id\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      onDelete: index => onDelete(index),\n      onAdd: data => onAdd(data),\n      data: data,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const cachedWeather = savedList => {\n    const validIds = savedList.filter(id => typeof id == 'number');\n    return validIds.map(async (id, index) => await getCardWithData(id, index));\n  };\n\n  const [idList, changeIdList] = useState(() => {\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    // return !!savedList ? cachedWeather(savedList) : [];\n    return [];\n  });\n  useEffect(() => {\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList));\n  }, []);\n\n  const onDelete = index => {};\n\n  const onAdd = data => {\n    changeIdList(idList.append( /*#__PURE__*/React.createElement(Card, {\n      data: data,\n      index: idList.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, !!idList && idList.length > 0 && [idList], !!idList && idList.length < 10 && /*#__PURE__*/React.createElement(Card, {\n    index: idList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","Card","Services","CardRow","getCardWithData","id","index","data","getData","locId","onDelete","onAdd","cachedWeather","savedList","validIds","filter","map","idList","changeIdList","window","localStorage","setItem","JSON","stringify","append","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,eAAe,GAAG,OAAOC,EAAP,EAAWC,KAAX,KAAqB;AAC3C,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiB;AAACC,MAAAA,KAAK,EAAEJ;AAAR,KAAjB,CAAnB;AACA,wBAAO,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAGC,KAAD,IAAWI,QAAQ,CAACJ,KAAD,CAAnC;AAA4C,MAAA,KAAK,EAAGC,IAAD,IAAUI,KAAK,CAACJ,IAAD,CAAlE;AAA0E,MAAA,IAAI,EAAEA,IAAhF;AAAsF,MAAA,KAAK,EAAED,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD;;AAKA,QAAMM,aAAa,GAAIC,SAAD,IAAe;AACnC,UAAMC,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiBV,EAAE,IAAI,OAAOA,EAAP,IAAc,QAArC,CAAjB;AACA,WAAOS,QAAQ,CAACE,GAAT,CAAa,OAAMX,EAAN,EAAUC,KAAV,KAAoB,MAAMF,eAAe,CAACC,EAAD,EAAKC,KAAL,CAAtD,CAAP;AACD,GAHD;;AAKA,QAAM,CAACW,MAAD,EAASC,YAAT,IAAyBnB,QAAQ,CAAC,MAAM;AAC5C;AACA;AACA,WAAO,EAAP;AACD,GAJsC,CAAvC;AAMAC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAzC;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMP,QAAQ,GAAIJ,KAAD,IAAW,CAAE,CAA9B;;AAEA,QAAMK,KAAK,GAAIJ,IAAD,IAAU;AACtBW,IAAAA,YAAY,CAACD,MAAM,CAACO,MAAP,eAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEjB,IAAZ;AAAkB,MAAA,KAAK,EAAEU,MAAM,CAACQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,CAAC,CAACR,MAAF,IAAYA,MAAM,CAACQ,MAAP,GAAgB,CAA5B,IACC,CAACR,MAAD,CAJJ,EAMG,CAAC,CAACA,MAAF,IAAYA,MAAM,CAACQ,MAAP,GAAgB,EAA5B,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYD,CAvCD;;AAyCA,eAAetB,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst CardRow = () => {\r\n  const getCardWithData = async (id, index) => {\r\n    const data = await Services.getData({locId: id});\r\n    return <Card onDelete={(index) => onDelete(index)} onAdd={(data) => onAdd(data)} data={data} index={index} />\r\n  }\r\n\r\n  const cachedWeather = (savedList) => {\r\n    const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    return validIds.map(async(id, index) => await getCardWithData(id, index));\r\n  };\r\n\r\n  const [idList, changeIdList] = useState(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // return !!savedList ? cachedWeather(savedList) : [];\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList));\r\n  }, [])\r\n\r\n  const onDelete = (index) => {}\r\n\r\n  const onAdd = (data) => {\r\n    changeIdList(idList.append(<Card data={data} index={idList.length} />));\r\n  }\r\n  \r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {!!idList && idList.length > 0 && \r\n        [idList]\r\n      }\r\n      {!!idList && idList.length < 10 &&\r\n        <Card index={idList.length}/>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}