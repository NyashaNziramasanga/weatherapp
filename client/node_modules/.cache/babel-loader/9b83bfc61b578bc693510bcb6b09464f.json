{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card\\\\card-adder.jsx\";\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Autocomplete from 'react-autocomplete';\n\nconst CardAdder = () => {\n  const [isActive, setActive] = useState(false);\n  const [location, setLocation] = useState('');\n  const [value, setValue] = useState('');\n  const cities = [{\n    name: 'Melbourne',\n    state: '',\n    country: 'AU',\n    id: 2158177\n  }, {\n    name: 'Melbourne',\n    state: 'FL',\n    country: 'US',\n    id: 4163971\n  }, {\n    name: 'Sydney',\n    state: '',\n    country: 'AU',\n    id: 2147714\n  }, {\n    name: 'Toronto',\n    state: '',\n    country: 'CA',\n    id: 6167865\n  }];\n\n  const handleBlur = () => {\n    setActive(false);\n  };\n\n  const handleSelect = val => {\n    console.log(val);\n    setLocation(val.id);\n    setValue(val);\n  };\n\n  function createLabel({\n    name,\n    state,\n    country,\n    id\n  }) {\n    const bracket = state === '' ? '' : ` (${state})`;\n    return `${name}${bracket}, ${country}`;\n  }\n\n  return isActive ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card weather-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    autoFocus: true,\n    getItemValue: item => item,\n    items: cities,\n    renderItem: (item, isHighlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: isHighlighted ? 'lightblue' : 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, createLabel(item)),\n    hiddenvalue: null,\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onSelect: val => handleSelect(val),\n    onBlur: handleBlur,\n    spellcheck: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"a\", {\n    className: \"card hover-card addButton\",\n    onClick: () => setActive(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: ['fas', 'plus-circle'],\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Add City\")));\n};\n\nexport default CardAdder;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card/card-adder.jsx"],"names":["React","useState","FontAwesomeIcon","Autocomplete","CardAdder","isActive","setActive","location","setLocation","value","setValue","cities","name","state","country","id","handleBlur","handleSelect","val","console","log","createLabel","bracket","item","isHighlighted","background","e","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Autocomplete from 'react-autocomplete';\r\n\r\nconst CardAdder = () => {\r\n  const [isActive, setActive] = useState(false);\r\n  const [location, setLocation] = useState('');\r\n  const [value, setValue] = useState('');\r\n\r\n  const cities=[\r\n    { name: 'Melbourne',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2158177,\r\n    },\r\n    { \r\n      name: 'Melbourne',\r\n      state: 'FL',\r\n      country: 'US',\r\n      id: 4163971\r\n    },\r\n    {\r\n      name: 'Sydney',\r\n      state: '',\r\n      country: 'AU',\r\n      id: 2147714,\r\n    },\r\n    {\r\n      name: 'Toronto',\r\n      state: '',\r\n      country: 'CA',\r\n      id: 6167865,\r\n    },\r\n  ]\r\n\r\n  const handleBlur = () => {\r\n    setActive(false);\r\n  }\r\n\r\n  const handleSelect = (val) => {\r\n    console.log(val);\r\n    setLocation(val.id);\r\n    setValue(val);\r\n  }\r\n\r\n  function createLabel({name, state, country, id}) {\r\n    const bracket = state === '' ? '' : ` (${state})`;\r\n    return `${name}${bracket}, ${country}`;\r\n  }\r\n\r\n  return (\r\n    isActive ? \r\n      <div className=\"card weather-card\">\r\n        <Autocomplete\r\n          autoFocus={true}\r\n          getItemValue={(item) => item}\r\n          items={cities}\r\n          renderItem={(item, isHighlighted) => \r\n            <div style={{ background: isHighlighted ? 'lightblue' : 'gray'} }>\r\n              {createLabel(item)}\r\n            </div>\r\n          }\r\n          hiddenvalue={null}\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          onSelect={(val) => handleSelect(val)}\r\n          onBlur={handleBlur}\r\n          spellcheck={false}\r\n        />\r\n      </div>\r\n    :\r\n      <a className=\"card hover-card addButton\" onClick={()=> setActive(true)}>\r\n        <span id=\"add-text\">\r\n          <FontAwesomeIcon icon={['fas', 'plus-circle']} size=\"2x\"/>\r\n          <p>Add City</p>\r\n        </span>\r\n      </a>\r\n  );\r\n}\r\n\r\nexport default CardAdder;"]},"metadata":{},"sourceType":"module"}