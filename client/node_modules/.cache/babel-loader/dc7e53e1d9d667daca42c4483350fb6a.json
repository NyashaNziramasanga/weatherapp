{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\weather-card.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite'; //import { getLocWeather } from '../../transport';\n\nconst WeatherCard = observer(({\n  savedLoc\n}) => {\n  const [location, setLocation] = useState(savedLoc);\n  const [weatherData, setWeatherData] = useState({});\n  const [loading, setLoading] = useState(!!location);\n\n  if (!!location) {\n    useEffect(getLocWeather({\n      location\n    }).then(res => {\n      if (!!res.success) {\n        setWeatherData(res.data);\n        setLocation(location);\n      } else {}\n    }));\n  }\n\n  const getLocWeather = async () => {\n    const res = await fetch(\"http://localhost:9000/weather\");\n    console.log(location, res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, location));\n});\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/weather-card.jsx"],"names":["React","useEffect","useState","observer","WeatherCard","savedLoc","location","setLocation","weatherData","setWeatherData","loading","setLoading","getLocWeather","then","res","success","data","fetch","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CACA;;AAEA,MAAMC,WAAW,GAAGD,QAAQ,CAAC,CAAC;AAACE,EAAAA;AAAD,CAAD,KAAgB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,QAAD,CAAxC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAC,CAACI,QAAH,CAAtC;;AAED,MAAI,CAAC,CAACA,QAAN,EAAe;AACZL,IAAAA,SAAS,CACTW,aAAa,CACT;AACEN,MAAAA;AADF,KADS,CAAb,CAIIO,IAJJ,CAIUC,GAAD,IAAS;AACd,UAAI,CAAC,CAACA,GAAG,CAACC,OAAV,EAAkB;AAChBN,QAAAA,cAAc,CAACK,GAAG,CAACE,IAAL,CAAd;AACAT,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD,OAHD,MAGO,CAEN;AACF,KAXH,CADS,CAAT;AAcD;;AAEF,QAAMM,aAAa,GAAG,YAAW;AAC9B,UAAME,GAAG,GAAG,MAAMG,KAAK,CAAC,+BAAD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAAsBQ,GAAtB;AACF,GAHD;;AAKC,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,QAAJ,CADF,CADF;AAKD,CAhC2B,CAA5B;AAkCA,eAAeF,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n//import { getLocWeather } from '../../transport';\r\n\r\nconst WeatherCard = observer(({savedLoc}) => {\r\n  const [location, setLocation] = useState(savedLoc);\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [loading, setLoading] = useState(!!location)\r\n\r\n\tif (!!location){\r\n    useEffect(\r\n\t\t  getLocWeather(\r\n        {\r\n          location,\r\n        }\r\n      ).then((res) => {\r\n        if (!!res.success){\r\n          setWeatherData(res.data);\r\n          setLocation(location);\r\n        } else {\r\n\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n\tconst getLocWeather = async() => {\r\n    const res = await fetch(\"http://localhost:9000/weather\");\r\n    console.log(location, res)\r\n\t}\r\n\r\n  return (\r\n    <div className='card'>\r\n      <p>{location}</p>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}