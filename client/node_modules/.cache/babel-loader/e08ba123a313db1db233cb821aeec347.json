{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport WeatherCard from './card/weather-card';\nimport Card from './card/card';\nimport { observer } from 'mobx-react-lite';\nconst CardRow = observer(() => {\n  const [cardList, changeCardList] = useState(JSON.parse(window.localStorage.getItem('saved-locs')));\n  let newLocs = [];\n  useEffect(() => {\n    return () => {\n      window.localStorage.setItem('saved-locs', JSON.stringify(newLocs));\n    };\n  });\n\n  const cachedWeather = () => {\n    newLocs = cardList.filter(n => typeof n == 'number');\n    return newLocs.map(n => /*#__PURE__*/React.createElement(Card, {\n      loc: n,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 29\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\" // onMouseDown={handleMouseDown}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, !!cardList && cardList.length > 0 && cachedWeather(), /*#__PURE__*/React.createElement(WeatherCard, {\n    loc: \"Melbourne, AU\",\n    index: 0,\n    data: {\n      icon: '03n',\n      desc: 'scattered clouds',\n      current: 300.15,\n      min: 301.15,\n      max: 340.15,\n      sunrise: 1485720272,\n      sunset: 1485766550\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), !(savedLocs.length >= 10) && /*#__PURE__*/React.createElement(Card, {\n    loc: 4163971,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n});\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","WeatherCard","Card","observer","CardRow","cardList","changeCardList","JSON","parse","window","localStorage","getItem","newLocs","setItem","stringify","cachedWeather","filter","n","map","length","icon","desc","current","min","max","sunrise","sunset","savedLocs"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,MAAMC,OAAO,GAAGD,QAAQ,CAAC,MAAM;AAC7B,QAAM,CAACE,QAAD,EAAWC,cAAX,IAA6BP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAX,CAAD,CAA3C;AAEA,MAAIC,OAAO,GAAG,EAAd;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXS,MAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,YAA5B,EAA0CN,IAAI,CAACO,SAAL,CAAeF,OAAf,CAA1C;AACD,KAFD;AAGD,GAJQ,CAAT;;AAMA,QAAMG,aAAa,GAAG,MAAM;AAC1BH,IAAAA,OAAO,GAAGP,QAAQ,CAACW,MAAT,CAAgBC,CAAC,IAAI,OAAOA,CAAP,IAAa,QAAlC,CAAV;AACA,WAAOL,OAAO,CAACM,GAAR,CAAYD,CAAC,iBAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,CAAP;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAC,eADZ,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAAC,CAACZ,QAAF,IAAcA,QAAQ,CAACc,MAAT,GAAkB,CAAhC,IACEJ,aAAa,EALlB,eAOE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAE,eADP;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,IAAI,EAAE;AACJK,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,kBAFF;AAGJC,MAAAA,OAAO,EAAE,MAHL;AAIJC,MAAAA,GAAG,EAAE,MAJD;AAKJC,MAAAA,GAAG,EAAE,MALD;AAMJC,MAAAA,OAAO,EAAE,UANL;AAOJC,MAAAA,MAAM,EAAE;AAPJ,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAoBG,EAAEC,SAAS,CAACR,MAAV,IAAoB,EAAtB,kBACC,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAE,OAAX;AAAoB,IAAA,KAAK,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADF;AA0BD,CA1CuB,CAAxB;AA4CA,eAAef,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport WeatherCard from './card/weather-card';\r\nimport Card from './card/card';\r\nimport {observer} from 'mobx-react-lite';\r\n\r\nconst CardRow = observer(() => {\r\n  const [cardList, changeCardList] = useState(JSON.parse(window.localStorage.getItem('saved-locs')));\r\n\r\n  let newLocs = [];\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.localStorage.setItem('saved-locs', JSON.stringify(newLocs));\r\n    }\r\n  })\r\n  \r\n  const cachedWeather = () => {\r\n    newLocs = cardList.filter(n => typeof(n) == 'number');\r\n    return newLocs.map(n => <Card loc={n}/>)\r\n  };\r\n  \r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n      // onMouseDown={handleMouseDown}\r\n    >\r\n      {!!cardList && cardList.length > 0 && \r\n        (cachedWeather())\r\n      }\r\n      <WeatherCard \r\n        loc={\"Melbourne, AU\"}\r\n        index={0}\r\n        data={{\r\n          icon: '03n',\r\n          desc: 'scattered clouds',\r\n          current: 300.15,\r\n          min: 301.15,\r\n          max: 340.15,\r\n          sunrise: 1485720272,\r\n          sunset: 1485766550\r\n        }}\r\n      />\r\n      {!(savedLocs.length >= 10) &&\r\n        <Card loc={4163971} index={0}/>\r\n      }\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}