{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst CardRow = () => {\n  const [idList, changeIdList] = useState(() => {\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    // console.log(savedList);\n    // const savedWeather = async (savedList) => {\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\n    //   return dataList;\n    // };\n    // return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\n    return [];\n  });\n  useEffect(() => {\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map(data => data.id)));\n  });\n\n  const onDelete = index => {\n    changeIdList(idList.filter((_, i) => i !== index));\n  };\n\n  const onAdd = (data, index) => {\n    changeIdList(index < idList.length ? [...idList.slice(0, index), data, ...idList.slice(index + 1)] : idList.concat([data]));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, idList.length > 0 && idList.map((data, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      onDelete: index => onDelete(index),\n      onAdd: (data, index) => onAdd(data, index),\n      initData: data,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }), idList.length < 10 && /*#__PURE__*/React.createElement(Card, {\n    onAdd: (data, index) => onAdd(data, index),\n    index: idList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useState","useEffect","Card","Services","CardRow","idList","changeIdList","window","localStorage","setItem","JSON","stringify","map","data","id","onDelete","index","filter","_","i","onAdd","length","slice","concat"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBN,QAAQ,CAAC,MAAM;AAC5C;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,WAAO,EAAP;AACD,GAZsC,CAAvC;AAcAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCC,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACO,GAAP,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAA1B,CAAf,CAAzC;AACD,GAFQ,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BV,IAAAA,YAAY,CAACD,MAAM,CAACY,MAAP,CAAc,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,KAAKH,KAA7B,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMI,KAAK,GAAG,CAACP,IAAD,EAAOG,KAAP,KAAiB;AAC7BV,IAAAA,YAAY,CAAEU,KAAK,GAAGX,MAAM,CAACgB,MAAf,GAAwB,CAAC,GAAGhB,MAAM,CAACiB,KAAP,CAAa,CAAb,EAAeN,KAAf,CAAJ,EAA2BH,IAA3B,EAAiC,GAAGR,MAAM,CAACiB,KAAP,CAAaN,KAAK,GAAC,CAAnB,CAApC,CAAxB,GAAqFX,MAAM,CAACkB,MAAP,CAAc,CAACV,IAAD,CAAd,CAAvF,CAAZ;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGR,MAAM,CAACgB,MAAP,GAAgB,CAAhB,IACChB,MAAM,CAACO,GAAP,CAAW,CAACC,IAAD,EAAOG,KAAP,KAAiB;AAC5B,wBAAO,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAGA,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAAnC;AAA4C,MAAA,KAAK,EAAE,CAACH,IAAD,EAAOG,KAAP,KAAiBI,KAAK,CAACP,IAAD,EAAOG,KAAP,CAAzE;AAAwF,MAAA,QAAQ,EAAEH,IAAlG;AAAwG,MAAA,KAAK,EAAEG,KAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAJJ,EAQGX,MAAM,CAACgB,MAAP,GAAgB,EAAhB,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACR,IAAD,EAAOG,KAAP,KAAiBI,KAAK,CAACP,IAAD,EAAOG,KAAP,CAAnC;AAAkD,IAAA,KAAK,EAAEX,MAAM,CAACgB,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF;AAcD,CAzCD;;AA2CA,eAAejB,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useState(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // console.log(savedList);\r\n\r\n    // const savedWeather = async (savedList) => {\r\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n    //   return dataList;\r\n    // };\r\n\r\n    // return !!savedList && savedList.length > 0 ? await savedWeather(savedList) : [];\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  });\r\n\r\n  const onDelete = (index) => {\r\n    changeIdList(idList.filter((_,i) => i !== index));\r\n  };\r\n\r\n  const onAdd = (data, index) => {\r\n    changeIdList( index < idList.length ? [...idList.slice(0,index), data, ...idList.slice(index+1)] : idList.concat([data]));\r\n  };\r\n  \r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {idList.length > 0 && \r\n        idList.map((data, index) => {\r\n        return <Card onDelete={(index) => onDelete(index)} onAdd={(data, index) => onAdd(data, index)} initData={data} index={index}/>\r\n        })\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onAdd={(data, index) => onAdd(data, index)} index={idList.length}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}