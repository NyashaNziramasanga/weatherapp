{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Glorison Lai\\\\Documents\\\\GitHub\\\\weatherapp\\\\client\\\\src\\\\components\\\\util\\\\card-row.jsx\";\nimport React, { useReducer, useEffect } from 'react';\nimport Card from './card/card';\nimport Services from '../../services/services';\n\nconst reducer = (list, action) => {\n  const {\n    type,\n    data,\n    index\n  } = action;\n\n  switch (type) {\n    case 'ADD_CARD':\n      return index < list.length ? [...list.slice(0, index), data, ...list.slice(index + 1)] : list.concat([data]);\n\n    case 'REMOVE_CARD':\n      return list.filter((_, i) => i !== index);\n\n    default:\n      return list;\n  }\n};\n\nconst CardRow = () => {\n  const [idList, changeIdList] = useReducer(reducer, []);\n  useEffect(() => {// const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\n    // console.log('savedlist', savedList);\n    // const savedWeather = async (savedList) => {\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\n    //   return dataList;\n    // };\n    // changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map(data => data.id)));\n  }, [idList]);\n\n  const onDelete = index => {\n    const tempList = [...idList];\n    changeIdList(tempList.filter((_, i) => i !== index));\n  };\n\n  const onAdd = (data, index) => {\n    const tempList = [...idList];\n    changeIdList(index < tempList.length ? [...tempList.slice(0, index), data, ...tempList.slice(index + 1)] : tempList.concat([data]));\n  };\n\n  const handleChange = (type, data, index) => {\n    changeIdList({\n      type: type,\n      data: data,\n      index: index\n    });\n  };\n\n  console.log('outside', idList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-row body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, idList.length > 0 && idList.map((data, index) => /*#__PURE__*/React.createElement(Card, {\n    onChange: (type, data, index) => handleChange(type, data, index),\n    initData: data,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  })), idList.length < 10 && /*#__PURE__*/React.createElement(Card, {\n    onAdd: (data, index) => onAdd(data, index),\n    index: idList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardRow;","map":{"version":3,"sources":["C:/Users/Glorison Lai/Documents/GitHub/weatherapp/client/src/components/util/card-row.jsx"],"names":["React","useReducer","useEffect","Card","Services","reducer","list","action","type","data","index","length","slice","concat","filter","_","i","CardRow","idList","changeIdList","window","localStorage","setItem","JSON","stringify","map","id","onDelete","tempList","onAdd","handleChange","console","log"],"mappings":"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","sourcesContent":["import React, {useReducer, useEffect} from 'react';\r\nimport Card from './card/card';\r\nimport Services from '../../services/services';\r\n\r\nconst reducer = (list, action) => {\r\n  const {type, data, index} = action;\r\n  switch (type) {\r\n    case 'ADD_CARD':\r\n      return( index < list.length ? [...list.slice(0,index), data, ...list.slice(index+1)] : list.concat([data]));\r\n    case 'REMOVE_CARD':\r\n      return(list.filter((_,i) => i !== index));\r\n    default:\r\n      return list;\r\n  }\r\n}\r\n\r\nconst CardRow = () => {\r\n  const [idList, changeIdList] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    // const savedList = JSON.parse(window.localStorage.getItem('saved-ids'));\r\n    // console.log('savedlist', savedList);\r\n\r\n    // const savedWeather = async (savedList) => {\r\n    //   const validIds = savedList.filter(id => typeof(id) == 'number');\r\n    //   const dataList = await Promise.all(validIds.map((id) => Services.getWeather({locId: id})));\r\n    //   return dataList;\r\n    // };\r\n\r\n    // changeIdList( !!savedList && savedList.length > 0 ? savedWeather(savedList) : [] );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('saved-ids', JSON.stringify(idList.map((data) => data.id)));\r\n  }, [idList]);\r\n\r\n  const onDelete = (index) => {\r\n    const tempList = [...idList];\r\n    changeIdList(tempList.filter((_,i) => i !== index));\r\n  };\r\n\r\n  const onAdd = (data, index) => {\r\n    const tempList = [...idList];\r\n    changeIdList( index < tempList.length ? [...tempList.slice(0,index), data, ...tempList.slice(index+1)] : tempList.concat([data]));\r\n  };\r\n\r\n  const handleChange = (type, data, index) => {\r\n    changeIdList({\r\n      type: type,\r\n      data: data,\r\n      index: index,\r\n    });\r\n  };\r\n  \r\n  console.log('outside', idList);\r\n\r\n  return (\r\n    <div \r\n      className=\"card-row body\"\r\n    >\r\n      {idList.length > 0 && \r\n        idList.map((data, index) => <Card onChange={(type, data, index) => handleChange(type, data, index)} initData={data} index={index}/>\r\n        )\r\n      }\r\n      {idList.length < 10 &&\r\n        <Card onAdd={(data, index) => onAdd(data, index)} index={idList.length}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardRow;"]},"metadata":{},"sourceType":"module"}